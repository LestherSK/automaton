automaton
todo list


button:
- read up and get RC values for hw debounce

algo/fifo & io/uart:
- read assembly generated by gcc and ensure that atomic/interrupt-safe functions
  don't take dangerous shortcuts and also don't over-access memory

storage:
- replace fat32 with something that won't explode if the power goes out
- my idea: append-only filesystem for logging:
  - two superblocks, updated alternately, with revision number and checksum
  - use most recent version that is valid
  - superblock says what the latest valid block is
  - to append a block: do the write, then update the superblock
  - worst case, lose the latest block only

time:
- add profiling interface
  - if we use TIMER1, then function trees with alarms can't be profiled

lcd/hd44780:
- implement timeout for hd44780_busy_wait
- use 4-bit bus

lcd/lcd:
- make friendly functions to manipulate individual bits of param state
- custom font api

stdio:
- implement a smaller/simpler vfprintf(); override?

power:
- use sleep instead of spinning or _delay_xx
- go to 3.3 volts

hardware:
- use leds everywhere
  - power
  - tx/rx on each UART
  - tx/rx on each OBD interface
  - r/w on SDcard
  - sck on SPI bus
  - buttons?

test:
- time/alarm
- algo/fifo
- io/uart
- io/spi
- lcd/hd44780
